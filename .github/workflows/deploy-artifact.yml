name: CMake Build Matrix

on: [push, pull_request]

env:
  CMAKE_VERSION: "3.29.6"
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MinGW", artifact: "Windows-MinGW",
            os: windows-latest,
            compiler: "mingw"
          }
        - {
            name: "Ubuntu Latest GCC", artifact: "Linux",
            os: ubuntu-latest,
            compiler: "gcc"
          }
        - {
            name: "macOS Latest Clang", artifact: "macOS",
            os: macos-latest,
            compiler: "clang"
          }

    steps:
    - uses: actions/checkout@v4
    - name: Set up CMake
      uses: actions/setup-cmake@v4
      with:
        cmake-version: ${{ env.CMAKE_VERSION }}
    - name: Download CMake
      id: download_tools
      shell: bash
      run: |
        set -e 
        set(cmake_version "3.29.6")
    - name: Configure Project
      run: |
        cmake \
          -S . \
          -B build \
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -G Ninja \
          -DCMAKE_CXX_COMPILER=${{ matrix.config.compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.config.compiler }}
        # Crucial check for CMake configuration errors.
        if [[ $? -ne 0 ]]; then
          echo "CMake configuration failed!"
          exit 1
        fi
    - name: Build Project
      run: cmake --build build --config ${{ env.BUILD_TYPE }}
    - name: Install (optional)
      run: if [ -f build/CMakeFiles/install.dir/build.make ]; then cmake --install build --prefix instdir; fi
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.config.artifact }}-${{ github.run_id }}.tar.gz
        path: ${{ matrix.config.artifact }}-${{ github.run_id }}.tar.gz
